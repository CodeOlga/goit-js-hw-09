{"mappings":"iiBAAA,IAwBuBA,EAAUC,EAxBjCC,EAAAC,EAAA,SAEaC,SAASC,cAAc,SAM/BC,iBAAiB,UAGtB,SAAsBC,GACpBA,EAAEC,iBACiBD,EAAEE,cAAcR,MACjBM,EAAEE,cAAcC,KACnBH,EAAEE,cAAcE,OAI/BC,QAAQC,IAAIN,E,KAKSP,EAiBT,EAjBmBC,EAiBhB,KAhBR,IAAIa,SAAQ,SAACC,EAASC,GACLC,KAAKC,SAAW,GAIpCH,EAAQ,CAAEf,WAAUC,UAIpBe,G,KAQHG,MAAK,SAAAC,G,IAAGpB,EAAQoB,EAARpB,SAAUC,EAAKmB,EAALnB,MACjBoB,EAAAnB,GAASoB,OAAOC,QAAQ,uBAAwCC,OAAfxB,EAAS,QAAYwB,OAANvB,EAAM,M,IAEvEwB,OAAM,SAAAL,G,IAAGpB,EAAQoB,EAARpB,SAAUC,EAAKmB,EAALnB,MAClBoB,EAAAnB,GAASoB,OAAOI,QAAQ,sBAAqCF,OAAfxB,EAAS,QAAYwB,OAANvB,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\n// const firstDelay = document.querySelector('input[name=\"delay\"]');\n// const delayStep = document.querySelector('input[name=\"step\"]');\n// const amount = document.querySelector('input[name=\"amount\"]');\n// const submitBtn = document.querySelector('button[type=\"submit\"]');\n\nform.addEventListener('submit', onFormSubmit);\n// submitBtn.addEventListener('submit', createPromise);\n\nfunction onFormSubmit(e) {\n  e.preventDefault();\n  const firstDelay = e.currentTarget.delay;\n  const delayStep = e.currentTarget.step;\n  const amount = e.currentTarget.amount;\n  // const {\n  //   elements: { amount, delay, step },\n  // } = e.currentTarget;\n  console.log(e);\n}\n\n// const createPromise = (position, delay) => {\n// const promise = function createPromise (position, delay) {\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    // setTimeout(() => {\n    if (shouldResolve) {\n      // resolve(onFormSubmit);\n      resolve({ position, delay });\n      // resolve({ firstDelay, delayStep, amount });\n      // resolve('Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`)');\n    } else {\n      reject();\n      // reject('Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`)');\n    }\n    // }, delay);\n  });\n}\n\ncreatePromise(2, 1500)\n  .then(({ position, delay }) => {\n    Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n"],"names":["position","delay","$6JpON","parcelRequire","document","querySelector","addEventListener","e","preventDefault","currentTarget","step","amount","console","log","Promise","resolve","reject","Math","random","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.0c23276c.js.map"}